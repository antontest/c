!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CFG	Makefile	/^CFG=debug$/;"	m
CFG_FLAGS	Makefile	/^CFG_FLAGS=$(WARNING) $(COMM_FLAGS)$/;"	m
CFG_FLAGS	Makefile	/^CFG_FLAGS=-g $(WARNING) $(COMM_FLAGS)$/;"	m
CFG_INC	Makefile	/^CFG_INC=$(addprefix -I.\/,$(INC_PATH))$/;"	m
CFG_LIB	Makefile	/^CFG_LIB=$(wildcard $(addsuffix \/*.lib,$(LIB_PATH)))$/;"	m
CFG_OBJ	Makefile	/^CFG_OBJ=$(patsubst %.c,%.o,$(OUTDIR)\/$(notdir $(CFG_SRC)))$/;"	m
CFG_SRC	Makefile	/^CFG_SRC=$(wildcard $(addsuffix \/*.c,$(SRC_PATH)))$/;"	m
COMMON_OBJ	Makefile	/^COMMON_OBJ=$/;"	m
COMM_FLAGS	Makefile	/^COMM_FLAGS=-O2 -Werror$/;"	m
COMPILE	Makefile	/^COMPILE=gcc $(WARNING) $(COMM_FLAGS) -c -o "$(OUTDIR)\/$(*F).o" $(CFG_INC) "$<"$/;"	m
DEBUG_ERROR	file.c	19;"	d	file:
INC_PATH	Makefile	/^INC_PATH=. inc$/;"	m
LIB_PATH	Makefile	/^LIB_PATH=. $/;"	m
LINK	Makefile	/^LINK=ar -rs "$(OUTFILE)" $(OBJ)$/;"	m
LINK	Makefile	/^LINK=gcc $(CFG_FLAGS) -o "$(OUTFILE)" $(OBJ) $(CFG_LIB)$/;"	m
LINK	Makefile	/^LINK=gcc -shared -fpic $(CFG_FLAGS) -o "$(OUTFILE)" $(OBJ) $(CFG_LIB)$/;"	m
MAKE	Makefile	/^MAKE=make$/;"	m
MKDIR	Makefile	/^MKDIR=mkdir$/;"	m
MOD	Makefile	/^MOD=reg$/;"	m
NAME	Makefile	/^NAME=$(notdir $(shell pwd))$/;"	m
OBJ	Makefile	/^OBJ=$(COMMON_OBJ) $(CFG_OBJ)$/;"	m
OUTDIR	Makefile	/^OUTDIR=debug$/;"	m
OUTDIR	Makefile	/^OUTDIR=release$/;"	m
OUTFILE	Makefile	/^OUTFILE=$(NAME).exe$/;"	m
OUTFILE	Makefile	/^OUTFILE=$(OUTDIR)\/lib$(NAME).a$/;"	m
OUTFILE	Makefile	/^OUTFILE=$(OUTDIR)\/lib$(NAME).so$/;"	m
RM	Makefile	/^RM=rm$/;"	m
SRC_PATH	Makefile	/^SRC_PATH=. src$/;"	m
WARNING	Makefile	/^WARNING=-Wall  #-Wno-unused -Wno-format$/;"	m
a_trim	file.c	/^void a_trim(char *s)$/;"	f
cfg_line_split	file.c	/^int cfg_line_split(char *line, const char *split, char **name, char **value)$/;"	f
cfg_value_gain	file.c	/^int cfg_value_gain(const char *key_name, const char *split, char value[], const char *path) $/;"	f
cfg_value_set	file.c	/^int cfg_value_set(const char *key_name, const char *split, const char *value, const char *path) $/;"	f
ini_value_gain	file.c	/^int ini_value_gain(const char *app_name, const char *key_name, char value[], const char *path) $/;"	f
ini_value_set	file.c	/^int ini_value_set(const char *app_name, const char *key_name, const char *value, const char *path) $/;"	f
l_trim	file.c	/^void l_trim(char *s)$/;"	f
main	file.c	/^int main(int agrc, char *agrv[])$/;"	f
mid_trim	file.c	/^void mid_trim(char *s)$/;"	f
r_trim	file.c	/^void r_trim(char *s)$/;"	f
